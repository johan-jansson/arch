#!/bin/bash
#                 _     _ _                  
#   __ _ _ __ ___| |__ | (_)_ __  _   ___  __
#  / _` | '__/ __| '_ \| | | '_ \| | | \ \/ /
# | (_| | | | (__| | | | | | | | | |_| |>  < 
#  \__,_|_|  \___|_| |_|_|_|_| |_|\__,_/_/\_\
#  _           _        _ _       _   _                             _       _   
# (_)_ __  ___| |_ __ _| | | __ _| |_(_) ___  _ __    ___  ___ _ __(_)_ __ | |_ 
# | | '_ \/ __| __/ _` | | |/ _` | __| |/ _ \| '_ \  / __|/ __| '__| | '_ \| __|
# | | | | \__ \ || (_| | | | (_| | |_| | (_) | | | | \__ \ (__| |  | | |_) | |_ 
# |_|_| |_|___/\__\__,_|_|_|\__,_|\__|_|\___/|_| |_| |___/\___|_|  |_| .__/ \__|
#                                                                    |_|        
# Archlinux installation script for system using UEFI and NVMe
# Based on https://wiki.archlinux.org/index.php/Installation_guide
#
# 0. boot archlinux-date-x86_64.iso
# 1. git clone https://github.com/johan-jansson/arch-new
# 2. ./arch
# 3. reboot
# 4. git clone https://github.com/johan-jansson/arch-new .
# 5. ./deploy

loadkeys sv-latin1
timedatectl set-ntp true
parted /dev/nvme1n1 mklabel gpt
parted /dev/nvme1n1 unit mib
parted /dev/nvme1n1 mkpart primary 1 512
parted /dev/nvme1n1 name 1 boot
parted /dev/nvme1n1 set 1 boot on
parted /dev/nvme1n1 mkpart primary 513 100%
parted /dev/nvme1n1 name 2 archlinux
mkfs.fat -F32 /dev/nvme1n1p1
mkfs.ext4 /dev/nvme1n1p2

# crypto on root partition
cryptsetup -c aes-xts-plain64 -y --hash sha256 --use-random luksFormat /dev/nvme1n1p2
cryptsetup luksOpen /dev/nvme1n1p2 crypto

# swap partition from 32Gb of root partition
pvcreate /dev/mapper/crypto
vgcreate arch /dev/mapper/crypto
lvcreate --size 32G arch --name swap
lvcreate -l +100%FREE arch --name root
mkfs.ext4 /dev/mapper/arch-root
mkswap /dev/mapper/arch-swap

# mount everything
mount /dev/mapper/arch-root /mnt 
swapon /dev/mapper/arch-swap
mkdir /mnt/boot
mount /dev/nvme1n1p1 /mnt/boot

# minimal hardened environment with lan + wireless networking
pacstrap /mnt base base-devel grub efibootmgr linux-hardened linux-firmware mkinitcpio lvm2 e2fsprogs iproute2 dhcpcd dialog wpa_supplicant man-db sudo neovim git zsh zsh-syntax-highlighting zsh-autosuggestions
genfstab -pU /mnt >> /mnt/etc/fstab
echo "tmpfs	/tmp	tmpfs	defaults,noatime,mode=1777	0	0" >> /mnt/etc/fstab
arch-chroot /mnt ln -sf /usr/share/zoneinfo/Europe/Stockholm /etc/localtime
arch-chroot /mnt hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /mnt/etc/locale.gen
arch-chroot /mnt locale-gen
echo "LANG=en_US.UTF-8" > /mnt/etc/locale.conf
echo "KEYMAP=sv-latin1" > /mnt/etc/vconsole.conf
echo "mercury" > /mnt/etc/hostname
echo "127.0.0.1   localhost" >> /mnt/etc/hosts
echo "::1         localhost" >> /mnt/etc/hosts
echo "127.0.1.1   mercury.lind  mercury" >> /mnt/etc/hosts
arch-chroot /mnt systemctl enable dhcpcd
echo "%wheel ALL=(ALL) ALL" >> /mnt/etc/sudoers
arch-chroot /mnt useradd -m -g users -G wheel -s /bin/zsh j
arch-chroot /mnt passwd j
arch-chroot /mnt passwd -d root

#### vim /mnt/etc/mkinitcpio.conf
#### Add 'ext4' to MODULES
#### Add 'encrypt' and 'lvm2' to HOOKS before filesystems
#### EX1: sed -i 's/HOOKS=(base\ udev\ autodetect\ modconf\ block\ filesystems\ keyboard\ fsck)/HOOKS="base\ udev\ autodetect\ modconf\ block\ encrypt\ filesystems\ keyboard\ fsck"/' /etc/mkinitcpio.conf

arch-chroot /mnt mkinitcpio -p linux-hardened
arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot

#### vim /mnt/etc/default/grub
#### Edit to 'GRUB_CMDLINE_LINUX="cryptdevice=/dev/nvme0n1p2:crypto:allow-discards"'
#### EX: sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet"/GRUB_CMDLINE_LINUX_DEFAULT="cryptdevice=\/dev\/nvme0n1p2:crypto:allow-discards"/' /etc/default/grub

arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

# minimal xorg with gpu and audio
#arch-chroot /mnt pacman --noconfirm -Sy libx11 libxft xorg-server xorg-xinit xorg-xrandr xorg-xrdb xorg-xinput xclip xorg-setxkbmap nvidia xorg-fonts-encodings picom libxinerama xwallpaper archlinux-wallpaper pulseaudio pulseaudio-alsa pulsemixer

umount -R /mnt
swapoff -a
reboot

