#!/bin/bash
#                 _     _ _                  
#   __ _ _ __ ___| |__ | (_)_ __  _   ___  __
#  / _` | '__/ __| '_ \| | | '_ \| | | \ \/ /
# | (_| | | | (__| | | | | | | | | |_| |>  < 
#  \__,_|_|  \___|_| |_|_|_|_| |_|\__,_/_/\_\
#  _           _        _ _       _   _                             _       _   
# (_)_ __  ___| |_ __ _| | | __ _| |_(_) ___  _ __    ___  ___ _ __(_)_ __ | |_ 
# | | '_ \/ __| __/ _` | | |/ _` | __| |/ _ \| '_ \  / __|/ __| '__| | '_ \| __|
# | | | | \__ \ || (_| | | | (_| | |_| | (_) | | | | \__ \ (__| |  | | |_) | |_ 
# |_|_| |_|___/\__\__,_|_|_|\__,_|\__|_|\___/|_| |_| |___/\___|_|  |_| .__/ \__|
#                                                                    |_|        
# Archlinux installation script for system using UEFI and NVMe
# Based on https://wiki.archlinux.org/index.php/Installation_guide
#
# 0. boot archlinux-date-x86_64.iso
# 1. git clone https://github.com/johan-jansson/arch-crypto
# 2. ./arch

loadkeys sv-latin1
timedatectl set-ntp true

# generate gpt partition table
parted /dev/nvme1n1 mklabel gpt
parted /dev/nvme1n1 unit mib
parted /dev/nvme1n1 mkpart primary 1 512
parted /dev/nvme1n1 name 1 boot
parted /dev/nvme1n1 set 1 boot on
parted /dev/nvme1n1 mkpart primary 513 100%
parted /dev/nvme1n1 name 2 archlinux

# encrypt and open root partition /dev/mapper/crypt-root
cryptsetup luksFormat -v -s 512 -h sha256 /dev/nvme1n1p2
cryptsetup open /dev/nvme1n1p2 arch-root

# initialize and mount filesystems
mkfs.ext4 /dev/mapper/arch-root
mount /dev/mapper/arch-root /mnt
mkfs.fat -F32 /dev/nvme1n1p1
mkdir /mnt/boot
mount /dev/nvme1n1p1 /mnt/boot

# minimal environment with lan + wireless networking
pacstrap /mnt base efibootmgr grub linux linux-firmware mkinitcpio e2fsprogs mdadm iproute2 dhcpcd dialog wpa_supplicant sudo 
genfstab -pU /mnt >> /mnt/etc/fstab
echo "tmpfs	/tmp	tmpfs	defaults,noatime,mode=1777	0	0" >> /mnt/etc/fstab
arch-chroot /mnt ln -sf /usr/share/zoneinfo/Europe/Stockholm /etc/localtime
arch-chroot /mnt hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /mnt/etc/locale.gen
arch-chroot /mnt locale-gen
echo "LANG=en_US.UTF-8" > /mnt/etc/locale.conf
echo "KEYMAP=sv-latin1" > /mnt/etc/vconsole.conf
echo "mercury" > /mnt/etc/hostname
echo "127.0.0.1   localhost" >> /mnt/etc/hosts
echo "::1         localhost" >> /mnt/etc/hosts
echo "127.0.1.1   mercury.lind  mercury" >> /mnt/etc/hosts
arch-chroot /mnt systemctl enable dhcpcd
echo "%wheel ALL=(ALL) ALL" >> /mnt/etc/sudoers
arch-chroot /mnt useradd -m -g users -G wheel -s /bin/zsh johan
arch-chroot /mnt passwd johan
arch-chroot /mnt passwd -d root
arch-chroot /mnt sed -i 's/MODULES=()/MODULES=(ext4)/' /etc/mkinitcpio.conf
arch-chroot /mnt sed -i 's/HOOKS=(base\ udev\ autodetect\ modconf\ block\ filesystems\ keyboard\ fsck)/HOOKS=(base\ udev\ autodetect\ modconf\ block\ encrypt\ filesystems\ keyboard\ fsck)/' /etc/mkinitcpio.conf
arch-chroot /mnt mkinitcpio -p linux
arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot
arch-chroot /mnt sed -i 's/GRUB_CMDLINE_LINUX=""/GRUB_CMDLINE_LINUX="cryptdevice=\/dev\/nvme1n1p2:arch-root"/' /etc/default/grub
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

# install basic tools
arch-chroot /mnt pacman --noconfirm -Sy git base-devel man-db neovim zsh zsh-syntax-highlighting

# minimal xorg with nvidia gpu acceleration and pulseaudio
arch-chroot /mnt pacman --noconfirm -Sy libx11 libxft xorg-server xorg-xinit xorg-xrandr xorg-xrdb xorg-xinput xclip xorg-setxkbmap nvidia nvidia-settings xorg-fonts-encodings libxinerama pulseaudio pulseaudio-alsa pulsemixer

# xfce4
arch-chroot /mnt pacman --noconfirm -Sy xfce4 gvfs xfce4-goodies sxhkd ttf-dejavu

# aur helper
#cd $HOME
#git clone https://aur.archlinux.org/yay
#cd yay
#makepkg -si --noconfirm
#cd $HOME
#rm -rf yay

# aur packages
#yay --cleanafter -S brave-bin

# productivity
#sudo pacman -Sy --noconfirm wireguard-tools keepassxc thunderbird syncthing zathura zathura-pdf-mupdf



## productivity 2
#sudo pacman -Sy --noconfirm code inkscape gimp texstudio texlive-core transmission-gtk obs-studio signal-desktop element-desktop vlc julia sxhkd neofetch
## dependencies for productivity, specific to configuration
#sudo pacman --noconfirm -Sy openresolv pdf2svg screenkey rtmpdump atomicparsley xdotool python-neovim python-pdftotext python-sympy nodejs yarn fzf ripgrep bat pacman-contrib

#yay --cleanafter -S ttf-juliamono
#yay --cleanafter -S zoom
#yay --cleanafter -S mattermost-desktop-bin
#yay --cleanafter -S discord
#yay --cleanafter -S teams
#yay --cleanafter -S spotify

# deploy configuration management
arch-chroot /mnt mkdir /home/johan/.config/
arch-chroot /mnt mkdir /home/johan/.config/dot/
echo ".config/dot" >> /mnt/home/johan/.gitignore
arch-chroot /mnt git clone --bare https://github.com/johan-jansson/dot /home/johan/.config/dot
arch-chroot /mnt /usr/bin/git --git-dir=/home/johan/.config/dot/ --work-tree=/home/johan checkout
arch-chroot /mnt /usr/bin/git --git-dir=/home/johan/.config/dot/ --work-tree=/home/johan config --local status.showUntrackedFiles no
arch-chroot /mnt chown johan.users -R /home/johan/
arch-chroot /mnt /usr/bin/git --git-dir=/home/johan/.config/dot/ --work-tree=/home/johan update-index --assume-unchanged "/home/johan/README.md"
arch-chroot /mnt rm -f "/home/johan/README.md"

# clean up and reboot
umount -R /mnt
reboot
